name: Deploy to GitHub Releases

on:
  push:
    branches:
      - main

jobs:
  deploy-to-github-releases:
    strategy:
      matrix:
        platform: [win-x64, linux-x64, osx-x64]

    runs-on: ${{ matrix.platform == 'win-x64' && 'windows-latest' || matrix.platform == 'linux-x64' && 'ubuntu-latest' || matrix.platform == 'osx-x64' && 'macos-latest' }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Get Version from Project File
        id: get-version
        shell: bash
        run: echo "version=$(grep -oE '<Version>[^<]+' Mirivoice/Mirivoice.csproj | sed 's/<Version>//')" >> $GITHUB_OUTPUT        
        
      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          
      - name: Publish Application for ${{ matrix.platform }}
        run: |
          dotnet publish Mirivoice/Mirivoice.csproj -c Release -o publish/${{ matrix.platform }} -r ${{ matrix.platform }} --self-contained true

      - name: Install Velopack
        run: dotnet tool install -g vpk
        
      - name: Create Velopack Package for ${{ matrix.platform }}
        run: |
          vpk download github --repoUrl https://github.com/EX3exp/MiriVoice
          vpk pack -u MiriVoice -v ${{ steps.get-version.outputs.version }} -p publish/${{ matrix.platform }}

      - name: Upload Velopack Release for ${{ matrix.platform }}
        run: |
          vpk upload github --repoUrl https://github.com/EX3exp/MiriVoice --publish --releaseName "MiriVoice ${{ steps.get-version.outputs.version }}" --tag v${{ steps.get-version.outputs.version }} --platform ${{ matrix.platform }}
