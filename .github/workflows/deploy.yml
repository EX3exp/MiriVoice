name: Build and Deploy

on:
  push:
    branches:
      - stable

jobs:
  build:
    name: Build Project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        dotnet-version: ['8.x']

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      VERSION: 1.0.0.0
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: nuget restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Run tests (Windows only)
        if: matrix.os == 'windows-latest'
        run: python Mirivoice.Desktop/appveyor.py 2>&1

      - name: Run tests (Linux/Mac)
        if: matrix.os != 'windows-latest'
        run: python3 Mirivoice.Desktop/appveyor.py 2>&1

      - name: Package win-x86 artifact
        if: matrix.os == 'windows-latest'
        run: zip -r MiriVoice-win-x86.zip Mirivoice.Desktop/bin/win-x86

      - name: Package win-x64 artifact
        if: matrix.os == 'windows-latest'
        run: zip -r MiriVoice-win-x64.zip Mirivoice.Desktop/bin/win-x64

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MiriVoice
          path: |
            Mirivoice.Desktop/bin/win-x86/MiriVoice-win-x86.zip
            Mirivoice.Desktop/bin/win-x64/MiriVoice-win-x64.zip
            Mirivoice.Desktop/osxbuild/MiriVoice-osx-x64.zip
            MiriVoice-linux-x64.tar.gz

  deploy:
    name: Deploy to GitHub Releases
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub release for main branch
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build/${{ github.run_number }}
          release_name: "${{ github.run_number }} Beta"
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release for stable branch
        if: github.ref == 'refs/heads/stable'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build/${{ github.run_number }}
          release_name: "${{ github.run_number }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            Mirivoice.Desktop/bin/win-x86/MiriVoice-win-x86.zip
            Mirivoice.Desktop/bin/win-x64/MiriVoice-win-x64.zip
            Mirivoice.Desktop/osxbuild/MiriVoice-osx-x64.zip
            MiriVoice-linux-x64.tar.gz
